name: ci

on:
  repository_dispatch:

env:
  pull_req_url: ${{github.event.client_payload.pull_request_url}}
  token: ${{github.event.client_payload.token_csrf}}
  github_token: ${{github.event.client_payload.github_token}}
  task_id: ${{github.event.client_payload.task_id}}
  adapter_url: ${{github.event.client_payload.adapter_url}}
  task_score: 50
  max_score: 100
  status: Done

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Clone student repository
        run: |
          tree
          sudo git clone ${{env.pull_req_url}} student_work
          sudo chmod -R 777 ./student_work
          tree
#
#      - name: Install dependences
#        working-directory: student_work
#        run: |
#          go mod download
#          go mod tidy

      - name: Test TestLecture1
        working-directory: student_work
        if: ${{ always() && env.task_id == 12040 }}
        run:  |
          cat fizz_buzz_test.go
          echo "max_score=$(expr ${{env.max_score}} + 1)" >> "$GITHUB_ENV"
          go test -v -run TestFizzBuzz
          echo "task_score=$(expr ${{env.task_score}} + 1)" >> "$GITHUB_ENV"

      - name: Show score
        if: always()
        run: |
          echo Obtained Scorere: ${{ env.task_score}}
          echo Max score: ${{ env.max_score}}

      - name: Set status
        if: ${{ failure() }}
        run:  |
          echo "status=Errors" >> "$GITHUB_ENV"

      - name: Hello edu, i'm coming for you
        if: ${{ always() }}
        run: |
          curl \
          -X PUT \
          -H "Accept: application/vnd.github.v3+json" \
          ${{ env.adapter_url }} \
          -d '{"token_csrf":"${{ env.token}}",
          "ci_score":${{env.task_score}},
          "ci_max_score":${{env.max_score}},
          "ci_status":"${{env.status}}" }'
